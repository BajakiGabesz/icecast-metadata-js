{"version":3,"sources":["Player/Player.module.css","About/About.module.css","StationSelector/StationSelector.module.css","App.module.css","Player/Player.jsx","StationSelector/StationSelector.jsx","About/About.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ICECAST_METADATA_JS_DEMO","Player","station","playing","toggle","metadata","title","StreamTitle","TITLE","document","className","styles","player","disabled","button","onClick","playPause","viewBox","fill","d","playerText","ARTIST","VENDOR_STRING","link","visitStation","href","target","rel","name","Station","id","changeStation","type","stationRadio","onChange","stationLabel","htmlFor","stationName","codecInfo","codec","metadataTypes","join","stationDescription","description","StationSelector","props","stations","map","idx","About","about","mainLink","headerLink","style","fontWeight","process","App","useState","setStation","setPlaying","Audio","audioElement","setMetadata","icecast","setIcecast","analyzer","useRef","audioMotion","setAudioMotion","useCallback","a","stop","detachAudioElement","IcecastMetadataPlayer","endpoint","onMetadata","meta","console","log","onPlay","onStop","onLoad","onError","error","message","onRetry","onStreamStart","icyDetectionTimeout","enableLogging","play","useEffect","AudioMotionAnalyzer","current","source","showScaleX","fftSize","mode","gradient","showBgColor","barSpace","lumiBars","useLayoutEffect","resizeObserver","ResizeObserver","setCanvasSize","window","innerWidth","innerHeight","observe","disconnect","spectrum","ref","header","footer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ed3e90ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"visitStation\":\"Player_visitStation__2xKeH\",\"playerText\":\"Player_playerText__Cw7Rh\",\"metadata\":\"Player_metadata__3j7ae\",\"playPause\":\"Player_playPause__3bmnX\",\"player\":\"Player_player__1vYfQ\",\"stationRadio\":\"Player_stationRadio__10mpt\",\"button\":\"Player_button__297uW\",\"link\":\"Player_link__2k87w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__2v-0B\",\"headerLink\":\"About_headerLink__3aZVt\",\"mainLink\":\"About_mainLink__1aSaU\",\"subLink\":\"About_subLink__n5KCY\",\"description\":\"About_description__3WN3o\",\"disclaimer\":\"About_disclaimer__2gOk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"station\":\"StationSelector_station__3a44c\",\"stationRadio\":\"StationSelector_stationRadio__1FTGQ\",\"stationLabel\":\"StationSelector_stationLabel__1DbUR\",\"stationName\":\"StationSelector_stationName__1hB_K\",\"stationDescription\":\"StationSelector_stationDescription__36TBn\",\"codecInfo\":\"StationSelector_codecInfo__JZjFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__3ZZ1n\",\"footer\":\"App_footer__29Fsv\",\"spectrum\":\"App_spectrum__MkN9s\"};","import React from \"react\";\nimport styles from \"./Player.module.css\";\n\nconst VISIT_STATION = \"Visit this station at \";\nconst ICECAST_METADATA_JS_DEMO = \"Icecast Metadata JS Demo\";\n\nconst Player = ({ station, playing, toggle, metadata }) => {\n  // update metadata in title\n  const title = metadata.StreamTitle || metadata.TITLE;\n  document.title = title\n    ? `${title} | ${ICECAST_METADATA_JS_DEMO}`\n    : ICECAST_METADATA_JS_DEMO;\n\n  return (\n    <div className={styles.player}>\n      <button disabled={!station} className={styles.button} onClick={toggle}>\n        {playing ? (\n          <svg className={styles.playPause} viewBox=\"0 0 450 525\">\n            <path\n              fill=\"#999\"\n              d=\"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"\n            />\n          </svg>\n        ) : (\n          <svg className={styles.playPause} viewBox=\"0 0 450 525\">\n            <path\n              fill=\"#999\"\n              d=\"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"\n            />\n          </svg>\n        )}\n      </button>\n      <div className={styles.playerText}>\n        <div className={styles.metadata}>\n          {typeof metadata === \"object\"\n            ? metadata.StreamTitle ||\n              (metadata.ARTIST\n                ? `${metadata.ARTIST} - ${metadata.TITLE}`\n                : metadata.TITLE) ||\n              metadata.VENDOR_STRING\n            : metadata}\n        </div>\n        {station?.link && (\n          <div className={styles.visitStation}>\n            {VISIT_STATION}\n            <a\n              className={styles.link}\n              href={station.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {station.name}\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport styles from \"./StationSelector.module.css\";\n\nconst Station = ({ id, station, changeStation }) => (\n  <div className={styles.station}>\n    <input\n      type=\"radio\"\n      className={styles.stationRadio}\n      id={id}\n      name=\"stations\"\n      onChange={() => changeStation(station)}\n    ></input>\n    <label className={styles.stationLabel} htmlFor={id}>\n      <div className={styles.stationName}>{station.name}</div>\n      <div className={styles.codecInfo}>\n        {station.codec} | {station.metadataTypes.join(\", \")}\n      </div>\n      <div className={styles.stationDescription}>{station.description}</div>\n    </label>\n  </div>\n);\n\nconst StationSelector = (props) =>\n  props.stations.map((station, idx) => (\n    <Station\n      key={idx}\n      station={station}\n      id={idx}\n      changeStation={props.changeStation}\n    />\n  ));\n\nexport default StationSelector;\n","import React from \"react\";\nimport styles from \"./About.module.css\";\n\nconst About = () => (\n  <div className={styles.about}>\n    <a\n      className={styles.mainLink}\n      href=\"https://github.com/eshaz/icecast-metadata-js\"\n    >\n      <div>icecast-metadata-js</div>\n    </a>\n    <div className={styles.description}>\n      Javascript library that reads, parses, and queues real-time metadata from\n      an Icecast stream.\n    </div>\n    <div className={styles.headerLink}>\n      <a className={styles.headerLink} style={{ fontWeight: \"bold\" }} href=\"/\">\n        React Demo\n      </a>\n      &nbsp;&nbsp; | &nbsp;&nbsp;\n      <a\n        className={styles.headerLink}\n        href={`${process.env.PUBLIC_URL}/demo.html`}\n      >\n        HTML Demo\n      </a>\n      &nbsp;&nbsp; | &nbsp;&nbsp;\n      <a\n        className={styles.headerLink}\n        href={`${process.env.PUBLIC_URL}/bare-minimum-demo.html`}\n      >\n        <i>\"Bare Minimum\"</i> &nbsp;HTML Demo\n      </a>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\";\nimport AudioMotionAnalyzer from \"audiomotion-analyzer\";\nimport Player from \"./Player/Player\";\nimport StationSelector from \"./StationSelector/StationSelector\";\nimport stations from \"./stations.json\";\nimport styles from \"./App.module.css\";\nimport About from \"./About/About\";\n\nimport IcecastMetadataPlayer from \"icecast-metadata-player\";\n\nconst SELECT_STATION = \"Select a station\";\nconst SELECT_OR_PLAY = \"Select a station or press play\";\nconst LOADING = \"Loading...\";\nconst RECONNECTING = \"Lost Connection. Reconnecting...\";\nconst CONNECTED = \"Waiting for metadata...\";\n\nconst App = () => {\n  const [station, setStation] = useState();\n  const [playing, setPlaying] = useState(false);\n  const [audioElement] = useState(new Audio());\n\n  const [metadata, setMetadata] = useState(SELECT_STATION);\n  const [icecast, setIcecast] = useState();\n\n  const analyzer = useRef();\n  const [audioMotion, setAudioMotion] = useState();\n\n  const changeStation = useCallback(\n    async (station) => {\n      if (icecast) {\n        await icecast.stop();\n        icecast.detachAudioElement();\n      }\n\n      const player = new IcecastMetadataPlayer(station.endpoint, {\n        onMetadata: (meta) => {\n          console.log(meta);\n          setMetadata(meta);\n        },\n        onPlay: () => {\n          setPlaying(true);\n        },\n        onStop: () => {\n          setPlaying(false);\n          setMetadata(SELECT_OR_PLAY);\n        },\n        onLoad: () => {\n          setPlaying(true);\n          setMetadata(LOADING);\n        },\n        onError: (error) => {\n          setMetadata(error?.message || error);\n        },\n        onRetry: () => {\n          setMetadata(RECONNECTING);\n        },\n        onStreamStart: () => {\n          setMetadata(CONNECTED);\n        },\n        icyDetectionTimeout: 5000,\n        enableLogging: true,\n        metadataTypes: station.metadataTypes,\n        audioElement,\n      });\n\n      player.play();\n\n      setIcecast(player);\n      setStation(station);\n    },\n    [icecast, audioElement]\n  );\n\n  const toggle = useCallback(() => {\n    playing ? icecast.stop() : icecast.play();\n  }, [icecast, playing]);\n\n  useEffect(() => {\n    setAudioMotion(\n      new AudioMotionAnalyzer(analyzer.current, {\n        source: audioElement,\n        showScaleX: false,\n        fftSize: 32768,\n        mode: 1,\n        gradient: \"prism\",\n        showBgColor: false,\n        barSpace: 0,\n        lumiBars: true,\n      })\n    );\n  }, [audioElement]);\n\n  // adjust canvas size for audio spectrum\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      audioMotion &&\n        audioMotion.setCanvasSize(window.innerWidth, window.innerHeight + 100);\n    });\n    resizeObserver.observe(analyzer.current);\n    return () => resizeObserver.disconnect();\n  }, [audioMotion]);\n\n  return (\n    <>\n      <div className={styles.spectrum} ref={analyzer}></div>\n      <header className={styles.header}>\n        <About />\n      </header>\n      <main>\n        <StationSelector stations={stations} changeStation={changeStation} />\n      </main>\n      <footer className={styles.footer}>\n        <Player\n          station={station}\n          toggle={toggle}\n          playing={playing}\n          metadata={metadata}\n        ></Player>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}